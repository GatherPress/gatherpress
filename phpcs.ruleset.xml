<?xml version="1.0"?>
<ruleset name="WordPress Coding Standards based custom ruleset for your plugin">
	<description>Generally-applicable sniffs for WordPress plugins.</description>

	<!-- What to scan -->
	<file>.</file>
	<exclude-pattern>.gatherpress.org/playground-preview</exclude-pattern>
	<exclude-pattern>*.asset.php</exclude-pattern>
	<exclude-pattern>/data/credits.php</exclude-pattern>
	<exclude-pattern>/vendor/</exclude-pattern>
	<exclude-pattern>/node_modules/</exclude-pattern>
	<exclude-pattern>/wp-core/</exclude-pattern>
	<exclude-pattern>/languages/</exclude-pattern>

	<!-- How to scan -->
	<!-- Usage instructions: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Usage -->
	<!-- Annotated ruleset: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-ruleset.xml -->
	<arg value="sp"/> <!-- Show sniff and progress -->
	<arg name="basepath" value="./"/><!-- Strip the file paths down to the relevant bit -->
	<arg name="colors"/>
	<arg name="extensions" value="php"/>
	<arg name="parallel" value="8"/><!-- Enables parallel processing when available for faster results. -->

	<!-- Rules: Check PHP version compatibility -->
	<!-- https://github.com/PHPCompatibility/PHPCompatibility#sniffing-your-code-for-compatibility-with-specific-php-versions -->
	<config name="testVersion" value="7.4-"/>
	<!-- https://github.com/PHPCompatibility/PHPCompatibilityWP -->
	<rule ref="PHPCompatibilityWP"/>

	<!-- Rules: WordPress Coding Standards -->
	<!-- https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards -->
	<!-- https://github.com/WordPress-Coding-Standards/WordPress-Coding-Standards/wiki/Customizable-sniff-properties -->
	<config name="minimum_wp_version" value="6.4"/>
	<rule ref="WordPress"/>
	<!-- Let's also check that everything is properly documented. -->
	<rule ref="WordPress-Docs"/>
	<!-- Trigger a Warning on @todo comments. -->
	<rule ref="Generic.Commenting.Todo"/>

	<!-- @source:
	- https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-Ruleset#the-annotated-sample-file
	- https://github.com/squizlabs/PHP_CodeSniffer/issues/3769#issuecomment-1452605087

	Here we are including a specific sniff but also changing
	the error message of a specific message inside the sniff.
	Note that the specific code for the message, which is
	TaskFound in this case, is defined by the sniff developer.
	You can display these codes by using the -s command line
	argument when checking a file.

	Also note that this message has a variable inside it,
	which is why it is important that sniffs use a printf style
	format for their error messages.

	We also drop the severity of this message from the
	default value (5) so that it is hidden by default. It can be
	displayed by setting the minimum severity on the PHP_CodeSniffer
	command line. This is great if you want to use some messages
	only in code reviews and not have them block code commits.
	-->
	<!-- This error code is for when no description is found. -->
	<rule ref="Generic.Commenting.Todo.CommentFound">
		<message>Please review this TODO comment</message>
		<severity>3</severity>
	</rule>
	<!-- This error code is used when a task description is found. -->
	<rule ref="Generic.Commenting.Todo.TaskFound">
		<message>Please review this TODO comment: %s</message>
		<severity>3</severity>
	</rule>

	<rule ref="WordPress.NamingConventions.PrefixAllGlobals">
		<properties>
			<!-- Value: replace the function, class, and variable prefixes used. Separate multiple prefixes with a comma. -->
			<property name="prefixes" type="array" value="gatherpress"/>
		</properties>
	</rule>
	<rule ref="WordPress.WP.I18n">
		<properties>
			<!-- Value: replace the text domain used. -->
			<property name="text_domain" type="array">
				<element value="gatherpress"/>
				<!-- No need to translate 100%-core strings -->
				<element value="default"/>
			</property>
		</properties>
	</rule>
	<rule ref="WordPress.WhiteSpace.ControlStructureSpacing">
		<properties>
			<property name="blank_line_check" value="true"/>
		</properties>
	</rule>
</ruleset>
